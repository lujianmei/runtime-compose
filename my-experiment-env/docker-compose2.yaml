version: "3"
services:
   namenode1:
      image: flokkr/hadoop:${HADOOP_VERSION}
      hostname: namenode1
      command: ["hdfs", "namenode"]
      ports:
         - 9870:9870
      env_file:
        - ./hdfs-config
      environment:
          ENSURE_NAMENODE_DIR: "/tmp/hadoop-hadoop/dfs/name"
          SLEEP_SECONDS: 20
   namenode2:
      image: flokkr/hadoop:${HADOOP_VERSION}
      hostname: namenode2
      command: ["hdfs", "namenode"]
      ports:
         - 9871:9870
      env_file:
        - ./hdfs-config
      environment:
          ENSURE_STANDBY_NAMENODE_DIR: "/tmp/hadoop-hadoop/dfs/name"
          SLEEP_SECONDS: 40
   namenode3:
      image: flokkr/hadoop:${HADOOP_VERSION}
      hostname: namenode2
      command: ["hdfs", "namenode"]
      ports:
         - 9872:9870
      env_file:
        - ./hdfs-config
      environment:
          ENSURE_STANDBY_NAMENODE_DIR: "/tmp/hadoop-hadoop/dfs/name"
          SLEEP_SECONDS: 40
   journal1:
      image: flokkr/hadoop:${HADOOP_VERSION}
      hostname: journal1
      env_file:
        - ./hdfs-config
      command: ["hdfs", "journalnode"]
   journal2:
      image: flokkr/hadoop:${HADOOP_VERSION}
      hostname: journal2
      env_file:
        - ./hdfs-config
      command: ["hdfs", "journalnode"]
   journal3:
      image: flokkr/hadoop:${HADOOP_VERSION}
      hostname: journal3
      env_file:
        - ./hdfs-config
      command: ["hdfs", "journalnode"]
   datanode:
      image: flokkr/hadoop:${HADOOP_VERSION}
      command: ["hdfs", "datanode"]
      hostname: datanode
      env_file:
        - ./hdfs-config
      environment:
         SLEEP_SECONDS: 50
   activator:
      image: flokkr/hadoop:${HADOOP_VERSION}
      command: ["hdfs", "haadmin", "-transitionToActive", "nn1"]
      env_file:
        - ./hdfs-config
      environment:
         SLEEP_SECONDS: 60
   resourcemanager1:
      image: flokkr/hadoop:${HADOOP_VERSION}
      hostname: resourcemanager1
      command: ["yarn", "resourcemanager"]
      ports:
         - 8088:8088
      env_file:
        - ./yarn-config
      volumes:
        - ./testdata:/opt/testdata
   resourcemanager2:
      image: flokkr/hadoop:${HADOOP_VERSION}
      hostname: resourcemanager2
      command: ["yarn", "resourcemanager"]
      ports:
         - 8088:8088
      env_file:
        - ./yarn-config
      volumes:
        - ./testdata:/opt/testdata
   nodemanager1:
      image: flokkr/hadoop:${HADOOP_VERSION}
      hostname: nodemanager1
      command: ["yarn","nodemanager"]
      links:
         - resourcemanager1
         - resourcemanager2
         - namenode1
         - namenode2
         - namenode3
      env_file:
        - ./yarn-config
   nodemanager2:
      image: flokkr/hadoop:${HADOOP_VERSION}
      hostname: nodemanager2
      command: ["yarn","nodemanager"]
      links:
         - resourcemanager1
         - resourcemanager2
         - namenode1
         - namenode2
         - namenode3
      env_file:
        - ./yarn-config
   nodemanager3:
      image: flokkr/hadoop:${HADOOP_VERSION}
      hostname: nodemanager3
      command: ["yarn","nodemanager"]
      links:
         - resourcemanager1
         - resourcemanager2
         - namenode1
         - namenode2
         - namenode3
      env_file:
        - ./yarn-config
   zookeeper1:
     image: flokkr/zookeeper:${ZOOKEEPER_VERSION}
     hostname: zookeeper1
     env_file:
        - ./zookeeper-config
     environment:
       ZOO.CFG_clientPort: 2181
       ZOO.CFG_dataDir: /tmp/zookeeper
   zookeeper2:
     image: flokkr/zookeeper:${ZOOKEEPER_VERSION}
     hostname: zookeeper2
     env_file:
        - ./zookeeper-config
     environment:
       ZOO.CFG_clientPort: 2181
       ZOO.CFG_dataDir: /tmp/zookeeper
   zookeeper3:
     image: flokkr/zookeeper:${ZOOKEEPER_VERSION}
     hostname: zookeeper3
     env_file:
        - ./zookeeper-config
     environment:
       ZOO.CFG_clientPort: 2181
       ZOO.CFG_dataDir: /tmp/zookeeper
   sparkhistory:
       image: flokkr/spark:${SPARK_VERSION}
       command: ["/opt/spark/bin/spark-class","org.apache.spark.deploy.history.HistoryServer"]
       ports:
         - 18080:18080
       environment:
          SLEEP_SECONDS: 30
       env_file:
         - ./spark-config
   sparklogdirinit:
      image: flokkr/hadoop:${HADOOP_VERSION}
      volumes:
         - ./init-hdfs.sh:/usr/bin/init-hdfs.sh
      command: ["/usr/bin/init-hdfs.sh"]
      environment:
         SLEEP_SECONDS: 15
      env_file:
        - spark-config
   kafka:
      hostname: kafka
      image: wurstemeister/kafka
      ports:
        - "9092"
      environment:
        KAFKA_ADVERTISED_HOST_NAME: kafka
        KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
   hbasemaster:
      domainname: hbase
      image: flokkr/hbase:$HBASE_VERSION
      command: ["hbase","master","start"]
      hostname: hbasemaster
      ports:
        - 16010:16010
      env_file:
        - ./hbase-config
      environment:
        WAITFOR: namenode:9000
   hbaseregion1:
      image: flokkr/hbase:$HBASE_VERSION
      command: ["hbase","regionserver","start"]
      domainname: hbase
      hostname: hbaseregion1
      env_file:
        - ./hbase-config
   hbaseregion2:
      image: flokkr/hbase:$HBASE_VERSION
      command: ["hbase","regionserver","start"]
      domainname: hbase
      hostname: hbaseregion2
      env_file:
        - ./hbase-config
   hbaseregion3:
      image: flokkr/hbase:$HBASE_VERSION
      command: ["hbase","regionserver","start"]
      domainname: hbase
      hostname: hbaseregion3
      env_file:
        - ./hbase-config
   metastoredb:
      image: postgres
      environment:
        POSTGRES_PASSWORD: rootpwd
        POSTGRES_DB: metastore
        POSTGRES_USER: hive
   metastore:
     image: flokkr/hive
     command: ["hive","--service", "metastore"]
     env_file:
        - ./hive-config
   hiveserver2:
     image: flokkr/hive
     command: ["hive","--service", "hiveserver2"]
     volumes:
        - ./testdata.sql:/tmp/testdata.sql
     environment:
        HADOOP_CONF_DIR: /opt/hive/conf
     ports:
        - 10002:10002
     env_file:
        - ./hive-config
   hue:
      hostname: hue
      image: gethue/hue:latest
      container_name: development_hue
      dns: 8.8.8.8
      ports:
       - "8888:8888"
      #command: ./build/env/bin/hue runserver_plus 0.0.0.0:8888
      command: tail -f /dev/null
      volumes:
        - ../../../apps/hbase/src:/hue/apps/hbase/src
        - ./hue.ini:/hue/desktop/conf/hue.ini
   flume:
      hostname: flume
      image: anchorfree/flume:latest
      container_name: development_hue
      #volumes:
      #  - ../../../apps/hbase/src:/hue/apps/hbase/src
      #  - ./hue.ini:/hue/desktop/conf/hue.ini

networks:
   default:
      external:
         name: bigdata
